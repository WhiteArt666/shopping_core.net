@using shopping_tutorial.Models
@model ProductDetailsViewModel
@{
    ViewData["Title"] = "Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .size-btn.active {
        background-color: #007bff !important;
        color: white !important;
        border-color: #007bff !important;
    }
    
    .color-btn.active {
        border: 3px solid #007bff !important;
        box-shadow: 0 0 5px rgba(0,123,255,0.5) !important;
    }
    
    .ul-product-details-price-section {
        margin-bottom: 15px;
    }
    
    .ul-product-details-price {
        font-size: 1.5em;
        font-weight: bold;
        color: #e74c3c;
    }
    
    .ul-product-details-original-price {
        font-size: 1.2em;
        color: #999;
    }
    
    .ul-product-details-discount {
        font-size: 0.9em;
        display: inline-block;
    }
</style>

<main>
    <!-- BREADCRUMB SECTION START -->
    <div class="ul-container">
        <div class="ul-breadcrumb">
            <h2 class="ul-breadcrumb-title">Shop Details</h2>
            <div class="ul-breadcrumb-nav">
                <a href="/"> <i class="flaticon-home"></i> Home</a>
                <i class="flaticon-arrow-point-to-right"></i>
                <a href="/Product">Shop</a>
                <i class="flaticon-arrow-point-to-right"></i>
                <span class="current-page">@Model.ProductDetails.Name</span>
            </div>
        </div>
    </div>
    <!-- BREADCRUMB SECTION END -->

    <!-- MAIN CONTENT SECTION START -->

    <div class="ul-inner-page-container">
        <div class="ul-product-details">
            <div class="ul-product-details-top">
                <div class="row ul-bs-row row-cols-lg-2 row-cols-1 align-items-center">
                     <!-- img -->
                    <div class="col">
                        <div class="ul-product-details-img">
                            <div class="ul-product-details-img-slider swiper">
                                <div class="swiper-wrapper">
                                    <!-- single img -->
                                    <div class="swiper-slide"><img src="~/media/products/@Model.ProductDetails.Image" alt="@Model.ProductDetails.Name"></div>
                                    <!-- single img -->
                                    <div class="swiper-slide"><img src="~/media/products/@Model.ProductDetails.Image" alt="@Model.ProductDetails.Name"></div>
                                </div>

                                <div class="ul-product-details-img-slider-nav" id="ul-product-details-img-slider-nav">
                                    <button class="prev"><i class="flaticon-left-arrow"></i></button>
                                    <button class="next"><i class="flaticon-arrow-point-to-right"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- txt -->
                    <div class="col">
                        <div class="ul-product-details-txt">
                            <div class="ul-product-details-rating">
                                @{
                                    var ratings = ViewBag.ProductRatings as List<RatingModel> ?? new List<RatingModel>();
                                    var averageRating = ratings.Any() ? ratings.Average(r => int.Parse(r.Star ?? "0")) : 0;
                                    var reviewCount = ratings.Count;
                                }
                                <span class="rating">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (i <= averageRating)
                                        {
                                            <i class="flaticon-star"></i>
                                        }
                                        else
                                        {
                                            <i class="flaticon-star-3"></i>
                                        }
                                    }
                                </span>
                                <span class="review-number">(@reviewCount Khách Hàng Đã Đánh Giá)</span>
                            </div>

                            <!-- Price Display -->
                            <div class="ul-product-details-price-section">
                                @{
                                    var defaultVariant = Model.ProductDetails.ProductVariants?.FirstOrDefault(pv => pv.IsActive);
                                }
                                @if (defaultVariant != null && defaultVariant.DiscountPrice > 0 && defaultVariant.DiscountPrice < defaultVariant.OriginalPrice)
                                {
                                    <span class="ul-product-details-price current-price" id="current-price">@defaultVariant.DiscountPrice.ToString("#,##0 VNĐ")</span>
                                    <span class="ul-product-details-original-price" id="original-price" style="text-decoration: line-through; color: #999; margin-left: 10px;">@defaultVariant.OriginalPrice.ToString("#,##0 VNĐ")</span>
                                    <span class="ul-product-details-discount" id="discount-percent" style="background: #ff4757; color: white; padding: 2px 8px; border-radius: 4px; margin-left: 10px; font-size: 0.9em;">-@defaultVariant.DiscountPercentage%</span>
                                }
                                else if (defaultVariant != null)
                                {
                                    <span class="ul-product-details-price current-price" id="current-price">@defaultVariant.OriginalPrice.ToString("#,##0 VNĐ")</span>
                                    <span class="ul-product-details-original-price" id="original-price" style="display: none;"></span>
                                    <span class="ul-product-details-discount" id="discount-percent" style="display: none;"></span>
                                }
                                else
                                {
                                    <span class="ul-product-details-price current-price" id="current-price">@Model.ProductDetails.Price.ToString("#,##0 VNĐ")</span>
                                    <span class="ul-product-details-original-price" id="original-price" style="display: none;"></span>
                                    <span class="ul-product-details-discount" id="discount-percent" style="display: none;"></span>
                                }
                            </div>
                            
                            <h3 class="ul-product-details-title">@Model.ProductDetails.Name</h3>

                            @* <p class="ul-product-details-descr">@Model.ProductDetails.Description</p> *@

                            <!-- product options -->
                            @if (Model.ProductDetails.ProductVariants != null && Model.ProductDetails.ProductVariants.Any())
                            {
                                <div class="ul-product-details-options">
                                    <!-- Size Options -->
                                    @{
                                        var availableSizes = Model.ProductDetails.ProductVariants
                                            .Where(pv => pv.IsActive)
                                            .Select(pv => pv.Size)
                                            .Distinct()
                                            .ToList();
                                    }
                                    @if (availableSizes.Any())
                                    {
                                        <div class="ul-product-details-option ul-product-details-sizes">
                                            <span class="title">Size</span>
                                            <form action="#" class="variants">
                                                @for (int i = 0; i < availableSizes.Count; i++)
                                                {
                                                    var size = availableSizes[i];
                                                    <label for="ul-product-details-size-@size.Id">
                                                        <input type="radio" name="product-size" id="ul-product-details-size-@size.Id" value="@size.Id" @(i == 0 ? "checked" : "") hidden>
                                                        <span class="size-btn" data-size-id="@size.Id">@size.Name</span>
                                                    </label>
                                                }
                                            </form>
                                        </div>
                                    }

                                    <!-- Color Options -->
                                    @{
                                        var availableColors = Model.ProductDetails.ProductVariants
                                            .Where(pv => pv.IsActive)
                                            .Select(pv => pv.Color)
                                            .Distinct()
                                            .ToList();
                                    }
                                    @if (availableColors.Any())
                                    {
                                        <div class="ul-product-details-option ul-product-details-colors">
                                            <span class="title">Color</span>
                                            <form action="#" class="variants">
                                                @for (int i = 0; i < availableColors.Count; i++)
                                                {
                                                    var color = availableColors[i];
                                                    <label for="ul-product-details-color-@color.Id">
                                                        <input type="radio" name="product-color" id="ul-product-details-color-@color.Id" value="@color.Id" @(i == 0 ? "checked" : "") hidden>
                                                        <span class="color-btn" data-color-id="@color.Id" style="background-color: @color.ColorCode; width: 30px; height: 30px; border-radius: 50%; display: inline-block; border: 2px solid #ddd; margin-right: 5px; cursor: pointer;" title="@color.Name"></span>
                                                    </label>
                                                }
                                            </form>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="ul-product-details-options">
                                    <div class="ul-product-details-option ul-product-details-sizes">
                                        <span class="title">Size</span>
                                        <form action="#" class="variants">
                                            <label for="ul-product-details-size-1">
                                                <input type="radio" name="product-size" id="ul-product-details-size-1" checked hidden>
                                                <span class="size-btn">Free Size</span>
                                            </label>
                                        </form>
                                    </div>
                                </div>
                            }

							

                            <div class="ul-product-details-option ul-product-details-quantity">
                                <span class="title">Chọn Số Lượng</span>
                                <form action="#" class="ul-product-quantity-wrapper">
                                    <input type="number" name="product-quantity" id="ul-product-details-quantity" class="ul-product-quantity" value="1" min="1" readonly>
                                    <div class="btns">
                                        <button type="button" class="quantityIncreaseButton"><i class="flaticon-plus"></i></button>
                                        <button type="button" class="quantityDecreaseButton"><i class="flaticon-minus-sign"></i></button>
                                    </div>
                                </form>
                            </div>

                            <div class="ul-product-details-actions">
                                <div class="left">
                                    @if (Model.ProductDetails.Quantity == 0)
                                    {
                                        <button type="button" class="add-to-cart"><i class="flaticon-cart"></i> Hết hàng</button>
                                    }
                                    else
                                    {
                                        <button class="add-to-cart" data-product_id="@Model.ProductDetails.Id">
                                            Thêm Giỏ Hàng <span class="icon"><i class="flaticon-cart"></i></span>
                                        </button>
                                    }
                                    <button class="add-to-wishlist"><span class="icon"><i class="flaticon-heart"></i></span> Thêm Ưa Thích</button>
                                </div>
                                <div class="share-options">
                                    <button><i class="flaticon-facebook-app-symbol"></i></button>
                                    <button><i class="flaticon-twitter"></i></button>
                                    <button><i class="flaticon-linkedin-big-logo"></i></button>
                                    <a href="#"><i class="flaticon-youtube"></i></a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="ul-product-details-bottom">
                <!-- description -->
                <div class="ul-product-details-long-descr-wrapper">
                    <h3 class="ul-product-details-inner-title">Mô Tả Sản Phẩm</h3>
                    <p>@Html.Raw(Model.ProductDetails.Description)</p>
                </div>

                <!-- reviews -->
                <div class="ul-product-details-reviews">
                    @{
                        var productRatings = ViewBag.ProductRatings as List<RatingModel> ?? new List<RatingModel>();
                    }
                    <h3 class="ul-product-details-inner-title">@productRatings.Count Đánh Giá</h3>
                    
                    @if (productRatings.Any())
                    {
                        @foreach (var rating in productRatings)
                        {
                            <div class="ul-product-details-review">
                                <div class="ul-product-details-review-reviewer-img">
                                    <img src="/images/reviewer-img-1.png" alt="Reviewer Image">
                                </div>
                                <div class="ul-product-details-review-txt">
                                    <div class="header">
                                        <div class="left">
                                            <h4 class="reviewer-name">@rating.Name</h4>
                                            <h5 class="review-date">@DateTime.Now.ToString("MMMM d, yyyy") at @DateTime.Now.ToString("h:mm tt")</h5>
                                        </div>
                                        <div class="right">
                                            <div class="rating">
                                                @{
                                                    var starCount = int.Parse(rating.Star ?? "0");
                                                }
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    if (i <= starCount)
                                                    {
                                                        <i class="flaticon-star"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="flaticon-star-3"></i>
                                                    }
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <p>@rating.Comment</p>
                                    <button class="ul-product-details-review-reply-btn">Trả Lời</button>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="no-reviews">Sản phẩm chưa có đánh giá nào.</p>
                    }
                </div>

                <div class="ul-product-details-review-form-wrapper">
                    <h3 class="ul-product-details-inner-title">Write A Review</h3>
                    <span class="note">Your email address will not be published.</span>

                    <form class="ul-product-details-review-form" method="POST" asp-action="CommentProduct" asp-controller="Product">
                        <div class="form-group rating-field-wrapper">
                            <span class="title">Rate this product? *</span>
                            <div class="rating-field">
                                <button type="button" data-rating="1"><i class="flaticon-star-3"></i></button>
                                <button type="button" data-rating="2"><i class="flaticon-star-3"></i></button>
                                <button type="button" data-rating="3"><i class="flaticon-star-3"></i></button>
                                <button type="button" data-rating="4"><i class="flaticon-star-3"></i></button>
                                <button type="button" data-rating="5"><i class="flaticon-star-3"></i></button>
                            </div>
                        </div>

                        <input type="hidden" name="ProductId" value="@Model.ProductDetails.Id" />
                        <input type="hidden" name="Star" id="selectedRating" value="5" />
                        <div class="row row-cols-2 row-cols-xxs-1 ul-bs-row">
                            <div class="form-group">
                                <input asp-for="Name" placeholder="Your Name" />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <input asp-for="Email" placeholder="Your Email" />
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>
                            <div class="form-group col-12">
                                <textarea asp-for="Comment" placeholder="Your Review"></textarea>
                                <span asp-validation-for="Comment" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <button type="submit">Đăng Đánh Giá<span><i class="flaticon-up-right-arrow"></i></span></button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- related products -->
            <div class="ul-related-products">
                <h3 class="ul-product-details-inner-title">Sản Phẩm Liên Quan</h3>
                <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-4 g-4">
                    @if (ViewBag.RelatedProducts != null)
                    {
                        foreach (var related in ViewBag.RelatedProducts as IEnumerable<ProductModel>)
                        {
                            <div class="col">
                                <div class="single-products">
                                    <div class="productinfo text-center">
                                        <a asp-action="Detail" asp-controller="Product" asp-route-id="@related.Id">
                                            <img src="/media/products/@related.Image" alt="@related.Name" />
                                            <h2>@related.Price.ToString("#,##0 VNĐ")</h2>
                                            <p>@related.Name</p>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>

        </div>
    </div>
    <!-- MAIN CONTENT SECTION END -->
</main>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $('.add-to-cart').click(function () {
            var Id = $(this).data("product_id");
            $.ajax({
                type: "POST",
                url: "@Url.Action("Add", "Cart")",
                data: { Id: Id },
                success: function (result) {
                    if (result) {
                        Swal.fire("Thêm giỏ hàng thành công.");
                    }
                }
            });
        });

        // Handle rating selection
        $('.rating-field button').click(function () {
            var rating = $(this).data('rating');
            $('#selectedRating').val(rating);
            
            // Update visual representation
            $('.rating-field button').each(function(index) {
                var star = $(this).find('i');
                if (index < rating) {
                    star.removeClass('flaticon-star-3').addClass('flaticon-star');
                } else {
                    star.removeClass('flaticon-star').addClass('flaticon-star-3');
                }
            });
        });

        // Handle variant selection and price update
        @{
            var variantList = new List<object>();
            if (Model.ProductDetails.ProductVariants != null && Model.ProductDetails.ProductVariants.Any())
            {
                foreach(var pv in Model.ProductDetails.ProductVariants.Where(pv => pv.IsActive))
                {
                    variantList.Add(new {
                        Id = pv.Id,
                        ProductId = pv.ProductId,
                        ColorId = pv.ColorId,
                        SizeId = pv.SizeId,
                        ColorName = pv.Color?.Name ?? "Unknown",
                        SizeName = pv.Size?.Name ?? "Unknown",
                        OriginalPrice = (double)pv.OriginalPrice,
                        DiscountPrice = (double)pv.DiscountPrice,
                        DiscountPercentage = (double)pv.DiscountPercentage,
                        Quantity = pv.Quantity,
                        IsActive = pv.IsActive
                    });
                }
            }
        }
        // Create variants array directly in JavaScript
        var variants = [
            @if (Model.ProductDetails.ProductVariants != null)
            {
                var activeVariants = Model.ProductDetails.ProductVariants.Where(pv => pv.IsActive).ToList();
                @for(int i = 0; i < activeVariants.Count; i++)
                {
                    var pv = activeVariants[i];
                    <text>{
                        Id: @pv.Id,
                        ProductId: @pv.ProductId,
                        ColorId: @pv.ColorId,
                        SizeId: @pv.SizeId,
                        ColorName: '@(pv.Color?.Name ?? "Unknown")',
                        SizeName: '@(pv.Size?.Name ?? "Unknown")',
                        OriginalPrice: @pv.OriginalPrice,
                        DiscountPrice: @pv.DiscountPrice,
                        DiscountPercentage: @pv.DiscountPercentage,
                        Quantity: @pv.Quantity,
                        IsActive: @(pv.IsActive.ToString().ToLower())
                    }</text>
                    @if (i < activeVariants.Count - 1) { <text>,</text> }
                }
            }
        ];
        
        console.log('Variants data:', variants);
        
        // Debug raw ProductVariants
        console.log('Raw ProductVariants count:', @(Model.ProductDetails.ProductVariants?.Count ?? 0));
        @if (Model.ProductDetails.ProductVariants != null)
        {
            @foreach(var pv in Model.ProductDetails.ProductVariants)
            {
                <text>console.log('Raw variant - Id:@pv.Id, ColorId:@pv.ColorId, SizeId:@pv.SizeId, Active:@pv.IsActive');</text>
            }
        }
        
        // Debug: log each variant
        if (variants && variants.length > 0) {
            console.log('=== All Available Variants ===');
            variants.forEach(function(v, index) {
                console.log('Variant ' + index + ':', 'ColorId=' + v.ColorId + '(' + v.ColorName + ')', 'SizeId=' + v.SizeId + '(' + v.SizeName + ')', 'Price=' + v.OriginalPrice, 'Discount=' + v.DiscountPrice);
            });
            console.log('=== End Variants ===');
        } else {
            console.log('No variants found for this product');
        }

        function updatePrice() {
            var selectedColorId = parseInt($('input[name="product-color"]:checked').val());
            var selectedSizeId = parseInt($('input[name="product-size"]:checked').val());
            
            console.log('Selected Color ID:', selectedColorId, typeof selectedColorId);
            console.log('Selected Size ID:', selectedSizeId, typeof selectedSizeId);
            
            var currentPriceElement = $('#current-price');
            var originalPriceElement = $('#original-price');
            var discountElement = $('#discount-percent');
            
            // Find variant for selected color and size
            var variant = null;
            if (!isNaN(selectedColorId) && !isNaN(selectedSizeId)) {
                console.log('Looking for variant with ColorId=' + selectedColorId + ', SizeId=' + selectedSizeId);
                
                // Debug: show all variants we're checking against
                variants.forEach(function(v, index) {
                    console.log('Checking variant ' + index + ': ColorId=' + v.ColorId + ' (type:' + typeof v.ColorId + '), SizeId=' + v.SizeId + ' (type:' + typeof v.SizeId + ')');
                });
                
                variant = variants.find(function(v) {
                    var vColorId = parseInt(v.ColorId);
                    var vSizeId = parseInt(v.SizeId);
                    var match = vColorId === selectedColorId && vSizeId === selectedSizeId;
                    
                    console.log('Comparing: v.ColorId=' + vColorId + ' === ' + selectedColorId + ' AND v.SizeId=' + vSizeId + ' === ' + selectedSizeId + ' = ' + match);
                    
                    if (match) {
                        console.log('✅ MATCH FOUND:', v);
                    }
                    return match;
                });
                
                if (!variant) {
                    console.log('❌ No variant found for ColorId=' + selectedColorId + ', SizeId=' + selectedSizeId);
                    console.log('Available combinations:');
                    variants.forEach(function(v) {
                        console.log('  - ColorId=' + v.ColorId + ', SizeId=' + v.SizeId + ' (' + v.ColorName + ' / ' + v.SizeName + ')');
                    });
                }
            }
            
            if (variant) {
                // Variant found - show variant price
                if (variant.DiscountPrice > 0 && variant.DiscountPrice < variant.OriginalPrice) {
                    // Has discount
                    currentPriceElement.text(new Intl.NumberFormat('vi-VN').format(variant.DiscountPrice) + ' VNĐ');
                    originalPriceElement.text(new Intl.NumberFormat('vi-VN').format(variant.OriginalPrice) + ' VNĐ');
                    originalPriceElement.show();
                    discountElement.text('-' + Math.round(variant.DiscountPercentage) + '%');
                    discountElement.show();
                } else {
                    // No discount
                    currentPriceElement.text(new Intl.NumberFormat('vi-VN').format(variant.OriginalPrice) + ' VNĐ');
                    originalPriceElement.hide();
                    discountElement.hide();
                }
            } else {
                // No variant found - show product base price
                var basePrice = @Model.ProductDetails.Price;
                console.log('Using base price:', basePrice);
                currentPriceElement.text(new Intl.NumberFormat('vi-VN').format(basePrice) + ' VNĐ');
                originalPriceElement.hide();
                discountElement.hide();
            }
        }

        // Initialize price on page load and set active classes
        $(document).ready(function() {
            console.log('Document ready - initializing...');
            
            // Set first size as active
            $('.size-btn').first().addClass('active');
            // Set first color as active
            $('.color-btn').first().addClass('active');
            
            // Trigger initial price update
            updatePrice();
            
            // Bind change events to size and color selections
            $('input[name="product-size"], input[name="product-color"]').change(function() {
                console.log('Input changed');
                updatePrice();
            });

            // Handle clicks on size and color buttons
            $('.size-btn').click(function() {
                console.log('Size button clicked');
                // Remove active class from all size buttons
                $('.size-btn').removeClass('active');
                // Add active class to clicked button
                $(this).addClass('active');
                
                var sizeId = $(this).data('size-id');
                $('#ul-product-details-size-' + sizeId).prop('checked', true).trigger('change');
            });

            $('.color-btn').click(function() {
                console.log('Color button clicked');
                // Remove active class from all color buttons
                $('.color-btn').removeClass('active');
                // Add active class to clicked button
                $(this).addClass('active');
                
                var colorId = $(this).data('color-id');
                $('#ul-product-details-color-' + colorId).prop('checked', true).trigger('change');
            });
        });
    </script>
}
