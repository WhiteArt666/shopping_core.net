@model ChatViewModel
@{
    ViewData["Title"] = "Hỗ trợ khách hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.AntiForgeryToken()

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-headset"></i> Hỗ trợ khách hàng
                    </h4>
                </div>
                
                @if (ViewBag.Error != null)
                {
                    <div class="alert alert-danger m-3">
                        @ViewBag.Error
                    </div>
                }

                @if (Model.AvailableUsers.Any())
                {
                    <div class="card-body">
                        <!-- Chat với admin -->
                        <div id="chatMessages" style="height: 450px; overflow-y: auto; border: 1px solid #dee2e6; padding: 15px; margin-bottom: 15px; background-color: #f8f9fa;">
                            @foreach (var message in Model.Messages)
                            {
                                <div class="mb-3 @(message.IsFromAdmin ? "text-start" : "text-end")">
                                    <div class="d-inline-block @(message.IsFromAdmin ? "bg-light border" : "bg-primary text-white") p-2 rounded" style="max-width: 70%;">
                                        <div class="fw-bold mb-1">
                                            @if (message.IsFromAdmin)
                                            {
                                                <i class="fas fa-user-tie"></i> <span>Nhân viên hỗ trợ</span>
                                            }
                                            else
                                            {
                                                <i class="fas fa-user"></i> <span>Bạn</span>
                                            }
                                        </div>
                                        <div>@message.Message</div>
                                        <small class="@(message.IsFromAdmin ? "text-muted" : "text-white-50")">
                                            @message.SentTime.ToString("HH:mm dd/MM")
                                        </small>
                                    </div>
                                </div>
                            }
                        </div>

                        <div class="input-group">
                            <input type="text" id="messageInput" class="form-control form-control-lg" placeholder="Nhập câu hỏi hoặc tin nhắn của bạn..." maxlength="500">
                            <button class="btn btn-primary btn-lg" type="button" onclick="sendMessage()">
                                <i class="fas fa-paper-plane"></i> Gửi
                            </button>
                        </div>
                        
                        <div class="mt-3">
                            <small class="text-muted">
                                <i class="fas fa-info-circle"></i> 
                                Chúng tôi sẽ phản hồi trong thời gian sớm nhất. Cảm ơn bạn đã tin tương shop!
                            </small>
                        </div>
                    </div>
                }
                else
                {
                    <div class="card-body text-center">
                        <i class="fas fa-exclamation-triangle fa-3x text-warning mb-3"></i>
                        <h5>Hiện tại không có nhân viên hỗ trợ trực tuyến</h5>
                        <p class="text-muted">Vui lòng thử lại sau hoặc liên hệ hotline: <strong>1900-xxxx</strong></p>
                        
                        <div class="mt-4">
                            <h6>Các câu hỏi thường gặp:</h6>
                            <div class="list-group list-group-flush">
                                <div class="list-group-item">
                                    <strong>Q:</strong> Làm thế nào để theo dõi đơn hàng?
                                    <br><small class="text-muted">A: Vào mục "Đơn hàng của tôi" trong tài khoản để xem trạng thái</small>
                                </div>
                                <div class="list-group-item">
                                    <strong>Q:</strong> Chính sách đổi trả như thế nào?
                                    <br><small class="text-muted">A: Đổi trả trong 7 ngày, sản phẩm còn nguyên tem mác</small>
                                </div>
                                <div class="list-group-item">
                                    <strong>Q:</strong> Phí ship như thế nào?
                                    <br><small class="text-muted">A: Miễn phí ship cho đơn hàng từ 500k</small>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@if (Model.AvailableUsers.Any())
{
    @section Scripts {
    <script>
        const currentUserId = '@Model.CurrentUserId';
        const adminId = '@Model.OtherUserId';

        function sendMessage() {
            const messageInput = document.getElementById('messageInput');
            const message = messageInput.value.trim();
            
            if (!message || !adminId) {
                alert('Vui lòng nhập tin nhắn');
                return;
            }

            fetch('@Url.Action("SendMessage")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('[name="__RequestVerificationToken"]').value
                },
                body: `receiverId=${adminId}&message=${encodeURIComponent(message)}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Thêm tin nhắn vào UI
                    addMessageToChat(currentUserId, message, data.sentTime, false);
                    messageInput.value = '';
                    scrollToBottom();
                } else {
                    alert('Lỗi: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi gửi tin nhắn');
            });
        }

        function addMessageToChat(senderId, message, sentTime, isFromAdmin) {
            const chatMessages = document.getElementById('chatMessages');
            const messageDiv = document.createElement('div');
            
            messageDiv.className = `mb-3 ${isFromAdmin ? 'text-start' : 'text-end'}`;
            messageDiv.innerHTML = `
                <div class="d-inline-block ${isFromAdmin ? 'bg-light border' : 'bg-primary text-white'} p-2 rounded" style="max-width: 70%;">
                    <div class="fw-bold mb-1">
                        ${isFromAdmin ? '<i class="fas fa-user-tie"></i> <span>Nhân viên hỗ trợ</span>' : '<i class="fas fa-user"></i> <span>Bạn</span>'}
                    </div>
                    <div>${message}</div>
                    <small class="${isFromAdmin ? 'text-muted' : 'text-white-50'}">
                        ${sentTime}
                    </small>
                </div>
            `;
            
            chatMessages.appendChild(messageDiv);
        }

        function scrollToBottom() {
            const chatMessages = document.getElementById('chatMessages');
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        // Enter để gửi tin nhắn
        document.addEventListener('DOMContentLoaded', function() {
            const messageInput = document.getElementById('messageInput');
            if (messageInput) {
                messageInput.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter') {
                        sendMessage();
                    }
                });
                
                // Auto scroll to bottom
                scrollToBottom();
            }
        });

        // Polling để nhận tin nhắn mới từ admin
        setInterval(function() {
            if (adminId) {
                loadNewMessages();
            }
        }, 5000);

        let lastMessageCount = @Model.Messages.Count;

        function loadNewMessages() {
            fetch(`@Url.Action("GetMessages")?adminId=${adminId}`)
            .then(response => response.json())
            .then(data => {
                if (data.success && data.messages.length > lastMessageCount) {
                    // Có tin nhắn mới từ admin
                    const newMessages = data.messages.slice(lastMessageCount);
                    newMessages.forEach(msg => {
                        if (msg.isFromAdmin) {
                            addMessageToChat(msg.senderId, msg.message, msg.sentTime, true);
                        }
                    });
                    lastMessageCount = data.messages.length;
                    scrollToBottom();
                }
            })
            .catch(error => {
                console.error('Error loading messages:', error);
            });
        }
    </script>
    }
}
